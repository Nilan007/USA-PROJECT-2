import React, { useState, useEffect } from 'react';
import { MapPin, DollarSign, FileText, TrendingUp, Building, Users, Eye, ArrowRight } from 'lucide-react';
import { supabase } from '../../lib/supabase';

interface StateData {
  name: string;
  abbr: string;
  opportunities: number;
  totalValue: number;
  federalContracts: number;
  stateContracts: number;
  avgValue: number;
  topAgency: string;
}

interface Contract {
  id: string;
  title: string;
  agency: string;
  state: string;
  award_value?: number;
  budget_max?: number;
  contract_type: 'federal' | 'state';
  status: string;
}

export default function USAMap() {
  const [stateData, setStateData] = useState<Record<string, StateData>>({});
  const [selectedState, setSelectedState] = useState<string | null>(null);
  const [stateContracts, setStateContracts] = useState<Contract[]>([]);
  const [loading, setLoading] = useState(true);
  const [hoveredState, setHoveredState] = useState<string | null>(null);

  // US States with their SVG paths and positions
  const states = [
    { name: 'Alabama', abbr: 'AL', pathx: 580, y: 350 },
    { name: 'Alaska', abbr: 'AK', path: 'M50 450L60 460L70 470L80 480L90 490L100 500L110 510L120 520L130 530L140 540L150 550L160 560L170 570L180 580L190 590L200 600', x: 80, y: 450 },
    { name: 'Arizona', abbr: 'AZ', pathx: 200, y: 350 },
    { name: 'Arkansas', abbr: 'AR', pathx: 480, y: 320 },
    { name: 'California', abbr: 'CA', pathx: 80, y: 280 },
    { name: 'Colorado', abbr: 'CO', pathx: 350, y: 280 },
    { name: 'Connecticut', abbr: 'CT', pathx: 720, y: 200 },
    { name: 'Delaware', abbr: 'DE', pathx: 700, y: 240 },
    { name: 'Florida', abbr: 'FL', pathx: 650, y: 400 },
    { name: 'Georgia', abbr: 'GA', pathx: 620, y: 350 },
    { name: 'Hawaii', abbr: 'HI', pathx: 200, y: 400 },
    { name: 'Idaho', abbr: 'ID', pathx: 250, y: 200 },
    { name: 'Illinois', abbr: 'IL', pathx: 520, y: 250 },
    { name: 'Indiana', abbr: 'IN', pathx: 560, y: 260 },
    { name: 'Iowa', abbr: 'IA', pathx: 450, y: 240 },
    { name: 'Kansas', abbr: 'KS', pathx: 400, y: 290 },
    { name: 'Kentucky', abbr: 'KY', pathx: 580, y: 290 },
    { name: 'Louisiana', abbr: 'LA', pathx: 480, y: 370 },
    { name: 'Maine', abbr: 'ME', path: 'M158 310L158 320L168 330L178 340L188 350L198 360L208 370L218 380L228 390L238 400L248 410L258 420L268 430L278 440L288 450L298 460L308 470L318 480L328 490L338 500L348 510L358 520L368 530L378 540L388 550L398 560L408 570L418 580L428 590L438 600L448 610L458 620L468 630L478 640L488 650L498 660L508 670L518 680L528 690L538 700L548 710L558 720L568 730L578 740L588 750L598 760L608 770L618 780L628 790L638 800L648 810L658 820L668 830L678 840L688 850L698 860L708 870L718 880L728 890L738 900L748 910L758 920L768 930L778 940L788 950L798 960L808 970L818 980L828 990L838 1000', x: 750, y: 150 },
    { name: 'Maryland', abbr: 'MD', pathx: 680, y: 240 },
    { name: 'Massachusetts', abbr: 'MA', pathx: 720, y: 180 },
    { name: 'Michigan', abbr: 'MI', pathx: 560, y: 200 },
    { name: 'Minnesota', abbr: 'MN', pathx: 450, y: 180 },
    { name: 'Mississippi', abbr: 'MS', pathx: 520, y: 350 },
    { name: 'Missouri', abbr: 'MO', pathx: 450, y: 280 },
    { name: 'Montana', abbr: 'MT', pathx: 300, y: 150 },
    { name: 'Nebraska', abbr: 'NE', pathx: 380, y: 250 },
    { name: 'Nevada', abbr: 'NV', pathx: 150, y: 250 },
    { name: 'New Hampshire', abbr: 'NH', pathx: 730, y: 170 },
    { name: 'New Jersey', abbr: 'NJ', pathx: 710, y: 220 },
    { name: 'New Mexico', abbr: 'NM', pathx: 300, y: 320 },
    { name: 'New York', abbr: 'NY', pathx: 680, y: 190 },
    { name: 'North Carolina', abbr: 'NC', pathx: 650, y: 310 },
    { name: 'North Dakota', abbr: 'ND', pathx: 380, y: 150 },
    { name: 'Ohio', abbr: 'OH', pathx: 600, y: 250 },
    { name: 'Oklahoma', abbr: 'OK', pathx: 400, y: 320 },
    { name: 'Oregon', abbr: 'OR', pathx: 120, y: 200 },
    { name: 'Pennsylvania', abbr: 'PA', path: 'M158 310L158 320L168 330L178 340L188 350L198 360L208 370L218 380L228 390L238 400L248 410L258 420L268 430L278 440L288 450L298 460L308 470L318 480L328 490L338 500L348 510L358 520L368 530L378 540L388 550L398 560L408 570L418 580L428 590L438 600L448 610L458 620L468 630L478 640L488 650L498 660L508 670L518 680L528 690L538 700L548 710L558 720L568 730L578 740L588 750L598 760L608 770L618 780L628 790L638 800L648 810L658 820L668 830L678 840L688 850L698 860L708 870L718 880L728 890L738 900L748 910L758 920L768 930L778 940L788 950L798 960L808 970L818 980L828 990L838 1000', x: 650, y: 230 },
    { name: 'Rhode Island', abbr: 'RI', pathx: 740, y: 190 },
    { name: 'South Carolina', abbr: 'SC', pathx: 630, y: 330 },
    { name: 'South Dakota', abbr: 'SD', pathx: 380, y: 200 },
    { name: 'Tennessee', abbr: 'TN', pathx: 580, y: 320 },
    { name: 'Texas', abbr: 'TX', pathx: 350, y: 380 },
    { name: 'Utah', abbr: 'UT', pathx: 250, y: 280 },
    { name: 'Vermont', abbr: 'VT', pathx: 720, y: 160 },
    { name: 'Virginia', abbr: 'VA', pathx: 660, y: 260 },
    { name: 'Washington', abbr: 'WA', pathx: 150, y: 120 },
    { name: 'West Virginia', abbr: 'WV', pathx: 620, y: 260 },
    { name: 'Wisconsin', abbr: 'WI', pathx: 500, y: 200 },
    { name: 'Wyoming', abbr: 'WY', pathx: 300, y: 220 }
  ];

  useEffect(() => {
    fetchStateData();
  }, []);

  const fetchStateData = async () => {
    try {
      const { data: contracts, error } = await supabase
        .from('contracts')
        .select('state, agency, award_value, budget_max, contract_type, status')
        .eq('status', 'active');

      if (error) throw error;

      const stateStats: Record<string, StateData> = {};

      // Initialize all states
      states.forEach(state => {
        stateStats[state.abbr] = {
          name: state.name,
          abbr: state.abbr,
          opportunities: 0,
          totalValue: 0,
          federalContracts: 0,
          stateContracts: 0,
          avgValue: 0,
          topAgency: 'N/A'
        };
      });

      // Process contracts
      contracts?.forEach(contract => {
        if (contract.state) {
          const stateAbbr = contract.state.length === 2 ? contract.state : 
                           states.find(s => s.name.toLowerCase() === contract.state.toLowerCase())?.abbr;
          
          if (stateAbbr && stateStats[stateAbbr]) {
            const state = stateStats[stateAbbr];
            state.opportunities++;
            
            const value = contract.award_value || contract.budget_max || 0;
            state.totalValue += value;
            
            if (contract.contract_type === 'federal') {
              state.federalContracts++;
            } else {
              state.stateContracts++;
            }
          }
        }
      });

      // Calculate averages and find top agencies
      Object.values(stateStats).forEach(state => {
        if (state.opportunities > 0) {
          state.avgValue = state.totalValue / state.opportunities;
        }
      });

      setStateData(stateStats);
    } catch (error) {
      console.error('Error fetching state data:', error);
    } finally {
      setLoading(false);
    }
  };

  const fetchStateContracts = async (stateAbbr: string) => {
    try {
      const { data, error } = await supabase
        .from('contracts')
        .select('id, title, agency, state, award_value, budget_max, contract_type, status')
        .eq('status', 'active')
        .or(`state.eq.${stateAbbr},state.eq.${stateData[stateAbbr]?.name}`);

      if (error) throw error;
      setStateContracts(data || []);
    } catch (error) {
      console.error('Error fetching state contracts:', error);
    }
  };

  const handleStateClick = (stateAbbr: string) => {
    setSelectedState(stateAbbr);
    fetchStateContracts(stateAbbr);
  };

  const getStateColor = (stateAbbr: string) => {
    const state = stateData[stateAbbr];
    if (!state || state.opportunities === 0) return '#e5e7eb';
    
    if (state.opportunities > 50) return '#1e40af'; // Dark blue
    if (state.opportunities > 30) return '#3b82f6'; // Blue
    if (state.opportunities > 15) return '#60a5fa'; // Light blue
    if (state.opportunities > 5) return '#93c5fd';  // Very light blue
    return '#dbeafe'; // Lightest blue
  };

  const formatValue = (value: number) => {
    if (value >= 1000000000) return `$${(value / 1000000000).toFixed(1)}B`;
    if (value >= 1000000) return `$${(value / 1000000).toFixed(0)}M`;
    if (value >= 1000) return `$${(value / 1000).toFixed(0)}K`;
    return `$${value.toFixed(0)}`;
  };

  if (loading) {
    return (
      <div className="flex items-center justify-center p-8">
        <div className="text-lg">Loading USA map data...</div>
      </div>
    );
  }

  return (
    <div className="space-y-6">
      <div className="bg-gradient-to-r from-blue-600 to-indigo-700 rounded-xl p-6 text-white">
        <h1 className="text-2xl font-bold mb-2">USA Contract Opportunities Map</h1>
        <p className="text-blue-100">Interactive map showing government contract opportunities by state</p>
      </div>

      <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
        {/* Map Section */}
        <div className="lg:col-span-2">
          <div className="bg-white rounded-xl shadow-lg p-6">
            <div className="relative">
              <svg
                viewBox="0 0 800 500"
                className="w-full h-auto"
                style={{ maxHeight: '500px' }}
              >
                {/* Background */}
                <rect width="800" height="500" fill="#f8fafc" />
                
                {/* States */}
                {states.map((state) => (
                  <g key={state.abbr}>
                    {/* State shape (simplified rectangles for demo) */}
                    <rect
                      x={state.x}
                      y={state.y}
                      width="40"
                      height="30"
                      fill={getStateColor(state.abbr)}
                      stroke="#ffffff"
                      strokeWidth="1"
                      className="cursor-pointer transition-all duration-300 hover:stroke-2 hover:stroke-blue-600 transform hover:scale-110"
                      style={{
                        filter: hoveredState === state.abbr ? 'drop-shadow(0 4px 8px rgba(0,0,0,0.3))' : 'none',
                        transformOrigin: 'center'
                      }}
                      onMouseEnter={() => setHoveredState(state.abbr)}
                      onMouseLeave={() => setHoveredState(null)}
                      onClick={() => handleStateClick(state.abbr)}
                    />
                    
                    {/* State abbreviation */}
                    <text
                      x={state.x + 20}
                      y={state.y + 20}
                      textAnchor="middle"
                      className="text-xs font-bold fill-white pointer-events-none"
                      style={{ textShadow: '1px 1px 2px rgba(0,0,0,0.5)' }}
                    >
                      {state.abbr}
                    </text>
                    
                    {/* Opportunity count */}
                    <text
                      x={state.x + 20}
                      y={state.y + 28}
                      textAnchor="middle"
                      className="text-xs fill-white pointer-events-none"
                      style={{ textShadow: '1px 1px 2px rgba(0,0,0,0.5)' }}
                    >
                      {stateData[state.abbr]?.opportunities || 0}
                    </text>
                  </g>
                ))}
              </svg>
              
              {/* Tooltip */}
              {hoveredState && (
                <div className="absolute top-4 right-4 bg-black bg-opacity-80 text-white p-3 rounded-lg text-sm">
                  <div className="font-bold">{stateData[hoveredState]?.name}</div>
                  <div>Opportunities: {stateData[hoveredState]?.opportunities}</div>
                  <div>Total Value: {formatValue(stateData[hoveredState]?.totalValue || 0)}</div>
                  <div>Federal: {stateData[hoveredState]?.federalContracts}</div>
                  <div>State: {stateData[hoveredState]?.stateContracts}</div>
                </div>
              )}
            </div>
            
            {/* Legend */}
            <div className="mt-4 flex items-center justify-center space-x-4 text-sm">
              <div className="flex items-center">
                <div className="w-4 h-4 bg-gray-200 mr-2"></div>
                <span>0 opportunities</span>
              </div>
              <div className="flex items-center">
                <div className="w-4 h-4 bg-blue-200 mr-2"></div>
                <span>1-5</span>
              </div>
              <div className="flex items-center">
                <div className="w-4 h-4 bg-blue-300 mr-2"></div>
                <span>6-15</span>
              </div>
              <div className="flex items-center">
                <div className="w-4 h-4 bg-blue-500 mr-2"></div>
                <span>16-30</span>
              </div>
              <div className="flex items-center">
                <div className="w-4 h-4 bg-blue-600 mr-2"></div>
                <span>31-50</span>
              </div>
              <div className="flex items-center">
                <div className="w-4 h-4 bg-blue-800 mr-2"></div>
                <span>50+</span>
              </div>
            </div>
          </div>
        </div>

        {/* State Details Panel */}
        <div className="lg:col-span-1">
          {selectedState ? (
            <div className="bg-white rounded-xl shadow-lg p-6">
              <div className="flex items-center justify-between mb-4">
                <h3 className="text-lg font-bold text-gray-900">
                  {stateData[selectedState]?.name}
                </h3>
                <span className="text-2xl font-bold text-blue-600">
                  {selectedState}
                </span>
              </div>
              
              {/* State Stats */}
              <div className="grid grid-cols-2 gap-4 mb-6">
                <div className="bg-blue-50 p-3 rounded-lg">
                  <div className="flex items-center">
                    <FileText className="h-5 w-5 text-blue-600 mr-2" />
                    <div>
                      <div className="text-lg font-bold text-blue-900">
                        {stateData[selectedState]?.opportunities}
                      </div>
                      <div className="text-xs text-blue-700">Opportunities</div>
                    </div>
                  </div>
                </div>
                
                <div className="bg-green-50 p-3 rounded-lg">
                  <div className="flex items-center">
                    <DollarSign className="h-5 w-5 text-green-600 mr-2" />
                    <div>
                      <div className="text-lg font-bold text-green-900">
                        {formatValue(stateData[selectedState]?.totalValue || 0)}
                      </div>
                      <div className="text-xs text-green-700">Total Value</div>
                    </div>
                  </div>
                </div>
                
                <div className="bg-purple-50 p-3 rounded-lg">
                  <div className="flex items-center">
                    <Building className="h-5 w-5 text-purple-600 mr-2" />
                    <div>
                      <div className="text-lg font-bold text-purple-900">
                        {stateData[selectedState]?.federalContracts}
                      </div>
                      <div className="text-xs text-purple-700">Federal</div>
                    </div>
                  </div>
                </div>
                
                <div className="bg-orange-50 p-3 rounded-lg">
                  <div className="flex items-center">
                    <MapPin className="h-5 w-5 text-orange-600 mr-2" />
                    <div>
                      <div className="text-lg font-bold text-orange-900">
                        {stateData[selectedState]?.stateContracts}
                      </div>
                      <div className="text-xs text-orange-700">State</div>
                    </div>
                  </div>
                </div>
              </div>
              
              {/* Recent Contracts */}
              <div>
                <h4 className="font-medium text-gray-900 mb-3">Recent Contracts</h4>
                <div className="space-y-3 max-h-64 overflow-y-auto">
                  {stateContracts.slice(0, 5).map((contract) => (
                    <div key={contract.id} className="border border-gray-200 rounded-lg p-3 hover:bg-gray-50 transition-colors">
                      <div className="font-medium text-sm text-gray-900 mb-1 line-clamp-2">
                        {contract.title}
                      </div>
                      <div className="text-xs text-gray-600 mb-2">
                        {contract.agency}
                      </div>
                      <div className="flex items-center justify-between">
                        <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${
                          contract.contract_type === 'federal' 
                            ? 'bg-blue-100 text-blue-800' 
                            : 'bg-green-100 text-green-800'
                        }`}>
                          {contract.contract_type}
                        </span>
                        {(contract.award_value || contract.budget_max) && (
                          <span className="text-xs font-medium text-gray-900">
                            {formatValue(contract.award_value || contract.budget_max || 0)}
                          </span>
                        )}
                      </div>
                    </div>
                  ))}
                  
                  {stateContracts.length === 0 && (
                    <div className="text-center py-4 text-gray-500 text-sm">
                      No contracts found for this state
                    </div>
                  )}
                </div>
                
                {stateContracts.length > 5 && (
                  <div className="mt-3 text-center">
                    <button className="text-blue-600 hover:text-blue-800 text-sm font-medium">
                      View all {stateContracts.length} contracts
                      <ArrowRight className="h-4 w-4 ml-1 inline" />
                    </button>
                  </div>
                )}
              </div>
            </div>
          ) : (
            <div className="bg-white rounded-xl shadow-lg p-6">
              <div className="text-center py-12">
                <MapPin className="h-12 w-12 text-gray-400 mx-auto mb-4" />
                <h3 className="text-lg font-medium text-gray-900 mb-2">
                  Select a State
                </h3>
                <p className="text-gray-500 text-sm">
                  Click on any state in the map to view detailed contract information and opportunities.
                </p>
              </div>
            </div>
          )}
        </div>
      </div>

      {/* Top States Summary */}
      <div className="bg-white rounded-xl shadow-lg p-6">
        <h3 className="text-lg font-bold text-gray-900 mb-4">Top States by Contract Volume</h3>
        <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
          {Object.values(stateData)
            .sort((a, b) => b.opportunities - a.opportunities)
            .slice(0, 6)
            .map((state) => (
              <div
                key={state.abbr}
                onClick={() => handleStateClick(state.abbr)}
                className="border border-gray-200 rounded-lg p-4 hover:shadow-md cursor-pointer transition-all hover:border-blue-300 hover:bg-blue-50"
              >
                <div className="flex items-center justify-between mb-2">
                  <h4 className="font-medium text-gray-900">{state.name}</h4>
                  <span className="text-xs font-bold text-blue-600">{state.abbr}</span>
                </div>
                
                <div className="grid grid-cols-2 gap-2 text-xs">
                  <div>
                    <div className="text-gray-600">Opportunities</div>
                    <div className="font-bold text-gray-900">{state.opportunities}</div>
                  </div>
                  <div>
                    <div className="text-gray-600">Total Value</div>
                    <div className="font-bold text-gray-900">{formatValue(state.totalValue)}</div>
                  </div>
                </div>
              </div>
            ))}
        </div>
      </div>
    </div>
  );
}